<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SUVORK5CYII=
</value>
  </data>
</root>